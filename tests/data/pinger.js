/**
  Juju Pinger API facade version 42.
  This file has been generated by the generate command in js-libjuju.
*/

'use strict';


class PingerV42 {

  constructor(transport, info) {
    this._transport = transport;
    this._info = info;
    this.version = 42;
  }

  /**
    @param {Function} callback Called when the response from Juju is available,
      the callback receives an error or null if the operation succeeded.
  */
  ping(callback) {
    const params = {};
    // Prepare the request to the Juju API.
    const req = {
      type: 'Pinger',
      request: 'Ping',
      version: 42,
      params: params
    };
    // Send the request to the server.
    this._transport.write(req, (err, resp) => {
      if (!callback) {
        return;
      }
      if (err) {
        callback(err, {});
        return;
      }
      callback(null, {});
    });
  }

  /**
    @param {Function} callback Called when the response from Juju is available,
      the callback receives an error or null if the operation succeeded.
  */
  stop(callback) {
    const params = {};
    // Prepare the request to the Juju API.
    const req = {
      type: 'Pinger',
      request: 'Stop',
      version: 42,
      params: params
    };
    // Send the request to the server.
    this._transport.write(req, (err, resp) => {
      if (!callback) {
        return;
      }
      if (err) {
        callback(err, {});
        return;
      }
      callback(null, {});
    });
  }
}


const wrappers = require('../wrappers.js');
if (wrappers.wrapPinger) {
  PingerV42 = wrappers.wrapPinger(PingerV42);
}

module.exports = PingerV42;
